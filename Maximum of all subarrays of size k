class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        deque<int> dq;
        int maxi = INT_MIN;
        
        // Pushing k element in pq first
        for(int i=0;i<k;i++){
            dq.push_back(arr[i]);
            
            if(maxi < arr[i]){
                maxi = arr[i];
            }
        }
        
        // making answer array
        vector<int> ans;
        
        // Pushig first window element
        ans.push_back(maxi);
        
        for(int i=1;i<=n-k;i++){
            int num = dq.front();
            dq.pop_front();
            
            // pushing new element in dq then
            dq.push_back(arr[k+i-1]);
            
            if(maxi == num){
                maxi = INT_MIN;
                for(int j=i;j<=k+i-1;j++){
                    maxi = max(maxi,arr[j]);
                }
            }
            else{
                if(maxi < dq.back()){
                    maxi = dq.back();
                }
            }
            
            ans.push_back(maxi);
        }
        
        return ans;
    }
};
